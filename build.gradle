import groovy.json.JsonSlurper
import io.swagger.codegen.DefaultGenerator
import io.swagger.codegen.config.CodegenConfigurator
import org.yaml.snakeyaml.DumperOptions
import org.yaml.snakeyaml.Yaml

buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath ("org.yaml:snakeyaml:1.17+")
		classpath ("io.swagger:swagger-codegen:2.2.3")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.dnastack.dos.registry'
version = '1.0.0'
description = 'DOS Registry by DNAStack'
sourceCompatibility = 1.8


ext {
	serviceName = 'dos-reg'
	serviceVersion = '1.0.0'
}

repositories {
	mavenCentral()
}

configurations {
	generatedCompile
}

dependencies {

	generatedCompile 'org.springframework.boot:spring-boot-starter-data-rest'
	generatedCompile('io.springfox:springfox-swagger2:2.7.0')
	generatedCompile('io.springfox:springfox-swagger-ui:2.7.0')
	generatedCompile group: 'joda-time', name: 'joda-time', version: '2.3'

	compile('org.springframework.boot:spring-boot-starter-web')
	compile('io.springfox:springfox-swagger2:2.7.0')
	compile('io.springfox:springfox-swagger-ui:2.7.0')
	compile group: 'joda-time', name: 'joda-time', version: '2.3'
	compileOnly('org.projectlombok:lombok')

	runtime('org.springframework.boot:spring-boot-devtools')

	testCompile('org.springframework.boot:spring-boot-starter-test')
}

sourceSets {
	generated {
		compileClasspath = configurations.generatedCompile
	}
	main {
		compileClasspath += generated.output
		runtimeClasspath += generated.output
	}
	test {
		compileClasspath += generated.output
		runtimeClasspath += generated.output
	}
}

jar {
	manifest {
		attributes 'Implementation-Title': project.description,
				'Implementation-Version': project.version
	}
}

bootRun {
	systemProperties = System.properties
	classpath += sourceSets.generated.output
}

jar {
	from sourceSets.generated.output
}

def swaggerSourceFile = 'src/main/resources/api.yml'
def swaggerTargetFolder = 'src/generated/java'

task generateApi {
	inputs.file("$projectDir/$swaggerSourceFile")
	outputs.dir("$projectDir/$swaggerTargetFolder")
	doLast {
		def config = new CodegenConfigurator()
		config.setInputSpec("file:///$projectDir/$swaggerSourceFile")
		config.setOutputDir("$projectDir")
		config.setLang('spring')
		config.setAdditionalProperties([
				'interfaceOnly':'true',
				'modelPackage':'com.dnastack.dos.registry.controller',
				'apiPackage':'com.dnastack.dos.registry.controller',
				'sourceFolder'  : swaggerTargetFolder,
				'useBeanValidation':true,
				'modelNameSuffix':'Dto'
		])
		new DefaultGenerator().opts(config.toClientOptInput()).generate()
	}
}

compileGeneratedJava.dependsOn generateApi
classes.dependsOn generatedClasses
compileJava.dependsOn compileGeneratedJava

clean.doFirst {
	delete("${projectDir}/$swaggerTargetFolder")
}